//This file is automatically generated

// pipe-report-controller

import { PipeReportController } from '../controller';
export default {
    actions: {
        [PipeReportController.create.method] : {
            summary: 'create',
            method: 'post',
            url: (payload) => `/pipeReports`,
            parameters: [{'in':'body','name':'entity','description':'entity','required':true,'schema':{'$ref':'#/definitions/PipeReport'}}],
        },
        [PipeReportController.deleteById.method] : {
            summary: 'deleteById',
            method: 'delete',
            url: (payload) => `/pipeReports/${payload.id}`,
            parameters: [{'name':'id','in':'query','description':'id','required':false,'type':'string'}],
        },
        [PipeReportController.findAll.method] : {
            summary: 'findAll',
            method: 'get',
            url: (payload) => `/pipeReports`,
            parameters: [{'name':'sorted','in':'query','required':false,'type':'boolean'},{'name':'unsorted','in':'query','required':false,'type':'boolean'}],
        },
        [PipeReportController.findByCriteria.method] : {
            summary: 'findByCriteria',
            method: 'get',
            url: (payload) => `/pipeReports/find/criteria`,
            parameters: [{'name':'sorted','in':'query','required':false,'type':'boolean'},{'name':'unsorted','in':'query','required':false,'type':'boolean'},{'name':'userId','in':'query','required':false,'type':'string'}],
        },
        [PipeReportController.getById.method] : {
            summary: 'getById',
            method: 'get',
            url: (payload) => `/pipeReports/${payload.id}`,
            parameters: [{'name':'id','in':'path','description':'id','required':true,'type':'string'}],
        },
        [PipeReportController.pagingAll.method] : {
            summary: 'pagingAll',
            method: 'get',
            url: (payload) => `/pipeReports/paging/all`,
            parameters: [{'name':'offset','in':'query','required':false,'type':'integer','format':'int64'},{'name':'pageNumber','in':'query','required':false,'type':'integer','format':'int32'},{'name':'pageSize','in':'query','required':false,'type':'integer','format':'int32'},{'name':'paged','in':'query','required':false,'type':'boolean'},{'name':'sort.sorted','in':'query','required':false,'type':'boolean'},{'name':'sort.unsorted','in':'query','required':false,'type':'boolean'},{'name':'unpaged','in':'query','required':false,'type':'boolean'}],
        },
        [PipeReportController.pagingByCriteria.method] : {
            summary: 'pagingByCriteria',
            method: 'get',
            url: (payload) => `/pipeReports/paging/criteria`,
            parameters: [{'name':'offset','in':'query','required':false,'type':'integer','format':'int64'},{'name':'pageNumber','in':'query','required':false,'type':'integer','format':'int32'},{'name':'pageSize','in':'query','required':false,'type':'integer','format':'int32'},{'name':'paged','in':'query','required':false,'type':'boolean'},{'name':'sort.sorted','in':'query','required':false,'type':'boolean'},{'name':'sort.unsorted','in':'query','required':false,'type':'boolean'},{'name':'unpaged','in':'query','required':false,'type':'boolean'},{'name':'userId','in':'query','required':false,'type':'string'}],
        },
        [PipeReportController.update.method] : {
            summary: 'update',
            method: 'put',
            url: (payload) => `/pipeReports`,
            parameters: [{'in':'body','name':'entity','description':'entity','required':true,'schema':{'$ref':'#/definitions/PipeReport'}}],
        },
    },
    // state: {},
    // mutations: {},
    // getters: {}
}
